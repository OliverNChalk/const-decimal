/// Trait with precomputed scaling factors.
pub trait ScalingFactor {
    fn scaling_factor(decimals: u8) -> Self;
}

impl ScalingFactor for u64 {
    fn scaling_factor(decimals: u8) -> u64 {
        match decimals {
            0 => 1,
            1 => 10,
            2 => 100,
            3 => 1000,
            4 => 10000,
            5 => 100000,
            6 => 1000000,
            7 => 10000000,
            8 => 100000000,
            9 => 1000000000,
            10 => 10000000000,
            11 => 100000000000,
            12 => 1000000000000,
            13 => 10000000000000,
            14 => 100000000000000,
            15 => 1000000000000000,
            16 => 10000000000000000,
            17 => 100000000000000000,
            18 => 1000000000000000000,
            19 => 10000000000000000000,
            _ => unreachable!(),
        }
    }
}

impl ScalingFactor for i64 {
    fn scaling_factor(decimals: u8) -> i64 {
        match decimals {
            0 => 1,
            1 => 10,
            2 => 100,
            3 => 1000,
            4 => 10000,
            5 => 100000,
            6 => 1000000,
            7 => 10000000,
            8 => 100000000,
            9 => 1000000000,
            10 => 10000000000,
            11 => 100000000000,
            12 => 1000000000000,
            13 => 10000000000000,
            14 => 100000000000000,
            15 => 1000000000000000,
            16 => 10000000000000000,
            17 => 100000000000000000,
            18 => 1000000000000000000,
            _ => unreachable!(),
        }
    }
}

impl ScalingFactor for u128 {
    fn scaling_factor(decimals: u8) -> u128 {
        match decimals {
            0 => 1,
            1 => 10,
            2 => 100,
            3 => 1000,
            4 => 10000,
            5 => 100000,
            6 => 1000000,
            7 => 10000000,
            8 => 100000000,
            9 => 1000000000,
            10 => 10000000000,
            11 => 100000000000,
            12 => 1000000000000,
            13 => 10000000000000,
            14 => 100000000000000,
            15 => 1000000000000000,
            16 => 10000000000000000,
            17 => 100000000000000000,
            18 => 1000000000000000000,
            19 => 10000000000000000000,
            20 => 100000000000000000000,
            21 => 1000000000000000000000,
            22 => 10000000000000000000000,
            23 => 100000000000000000000000,
            24 => 1000000000000000000000000,
            25 => 10000000000000000000000000,
            26 => 100000000000000000000000000,
            27 => 1000000000000000000000000000,
            28 => 10000000000000000000000000000,
            29 => 100000000000000000000000000000,
            30 => 1000000000000000000000000000000,
            31 => 10000000000000000000000000000000,
            32 => 100000000000000000000000000000000,
            33 => 1000000000000000000000000000000000,
            34 => 10000000000000000000000000000000000,
            35 => 100000000000000000000000000000000000,
            36 => 1000000000000000000000000000000000000,
            37 => 10000000000000000000000000000000000000,
            38 => 100000000000000000000000000000000000000,
            _ => unreachable!(),
        }
    }
}

impl ScalingFactor for i128 {
    fn scaling_factor(decimals: u8) -> i128 {
        match decimals {
            0 => 1,
            1 => 10,
            2 => 100,
            3 => 1000,
            4 => 10000,
            5 => 100000,
            6 => 1000000,
            7 => 10000000,
            8 => 100000000,
            9 => 1000000000,
            10 => 10000000000,
            11 => 100000000000,
            12 => 1000000000000,
            13 => 10000000000000,
            14 => 100000000000000,
            15 => 1000000000000000,
            16 => 10000000000000000,
            17 => 100000000000000000,
            18 => 1000000000000000000,
            19 => 10000000000000000000,
            20 => 100000000000000000000,
            21 => 1000000000000000000000,
            22 => 10000000000000000000000,
            23 => 100000000000000000000000,
            24 => 1000000000000000000000000,
            25 => 10000000000000000000000000,
            26 => 100000000000000000000000000,
            27 => 1000000000000000000000000000,
            28 => 10000000000000000000000000000,
            29 => 100000000000000000000000000000,
            30 => 1000000000000000000000000000000,
            31 => 10000000000000000000000000000000,
            32 => 100000000000000000000000000000000,
            33 => 1000000000000000000000000000000000,
            34 => 10000000000000000000000000000000000,
            35 => 100000000000000000000000000000000000,
            36 => 1000000000000000000000000000000000000,
            37 => 10000000000000000000000000000000000000,
            38 => 100000000000000000000000000000000000000,
            _ => unreachable!(),
        }
    }
}
